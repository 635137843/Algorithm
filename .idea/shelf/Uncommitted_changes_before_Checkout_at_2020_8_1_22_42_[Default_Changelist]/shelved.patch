Index: src/com/hmx/sort/InsertionSort3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hmx.sort;\r\n\r\n/**\r\n * @ClassName InsertionSort1\r\n * @Description TODO\r\n * @Author xin\r\n * @Date 2020/5/11 18:29\r\n * @Version 1.0\r\n **/\r\npublic class InsertionSort3<E extends Comparable<E>> extends Sort<E> {\r\n    /*protected void sort() {\r\n        for (int begin = 1; begin < array.length; begin++) {\r\n            E v = array[begin];\r\n            int search = search(begin);\r\n            for (int i = begin; i > search; i--) {\r\n                array[i] = array[i-1];\r\n            }\r\n            array[search] = v;\r\n        }\r\n    }*/\r\n    @Override\r\n    protected void sort(){\r\n        for (int begin = 1; begin < array.length; begin++) {\r\n            insert(begin,search(begin));\r\n        }\r\n    }\r\n\r\n    private void insert(int source,int dest) {\r\n        E v = array[source];\r\n        for (int i = source; i > dest; i--) {\r\n            array[i] = array[i-1];\r\n        }\r\n        array[dest] = v;\r\n    }\r\n\r\n    private int search(int index){\r\n        System.out.println(\"\");\r\n        return 1;\r\n        int begin = 0;\r\n        int end = index;\r\n        while(begin < end){\r\n            int mid = (begin + end) >> 1;\r\n            if(cmp(array[index],array[mid]) < 0){\r\n                end = mid;\r\n            }else{\r\n                begin = mid + 1;\r\n            }\r\n        }\r\n        return begin;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/hmx/sort/InsertionSort3.java	(revision a84c5daba677f87b34a96777a15989826242c692)
+++ src/com/hmx/sort/InsertionSort3.java	(date 1596292067893)
@@ -8,20 +8,12 @@
  * @Version 1.0
  **/
 public class InsertionSort3<E extends Comparable<E>> extends Sort<E> {
-    /*protected void sort() {
-        for (int begin = 1; begin < array.length; begin++) {
-            E v = array[begin];
-            int search = search(begin);
-            for (int i = begin; i > search; i--) {
-                array[i] = array[i-1];
-            }
-            array[search] = v;
-        }
-    }*/
     @Override
-    protected void sort(){
-        for (int begin = 1; begin < array.length; begin++) {
-            insert(begin,search(begin));
+    protected void sort() {
+        int a = 0;
+        for (int begin = 0; begin < array.length; begin++) {
+            search(begin);
+            System.out.println("冲突");
         }
     }
 
@@ -35,7 +27,6 @@
 
     private int search(int index){
         System.out.println("");
-        return 1;
         int begin = 0;
         int end = index;
         while(begin < end){
